--* Table structure for table `datos_usuario`

  CREATE TABLE `datos_usuario` (
    `DNI_USUARIO` int(20) NOT NULL,
    `NOM_USUARIO` varchar(50) NOT NULL,
    `APELL_USUARIO` varchar(50) NOT NULL,
    `FECHA_NAC` date DEFAULT NULL,
    `CONTRASEÑA` varchar(50) NOT NULL,
    `CORREO` varchar(20) NOT NULL,
    `SEXO` varchar(10) DEFAULT NULL,
    `ESTADO` varchar(10) NOT NULL,
    `COD_ROL` int(4) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

  CREATE  PROCEDURE `spAddUser`(IN `_dni` INT, IN `_nom` VARCHAR(50), IN `_apell` VARCHAR(50), IN `_naci` DATE, IN `_contra` VARCHAR(50), IN  `_correo` VARCHAR(20), IN `_sexo` VARCHAR(10), IN `_estado` VARCHAR(10), IN `_cod_rol` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER  BEGIN INSERT INTO datos_usuario( DNI_USUARIO, NOM_USUARIO, APELL_USUARIO, FECHA_NAC, CONTRASEÑA, CORREO, SEXO, ESTADO, COD_ROL ) VALUES( _dni,   _nom, _apell, _naci, _contra, _correo, _sexo, _estado, _cod_rol ) ; END
  CALL `spAddUser`(_dni, _nom, _apell, _naci, _contra, _correo, _sexo, _estado, _cod_rol);

  CREATE PROCEDURE `spGetAllUsers`() NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
  BEGIN 
  SELECT DNI_USUARIO, NOM_USUARIO, APELL_USUARIO, FECHA_NAC, CONTRASEÑA, CORREO, SEXO, ESTADO, COD_ROL FROM datos_usuario; 
  END
  CALL `spGetAllUsers`()

  CREATE PROCEDURE `spGetUser`(IN `_dni` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
  BEGIN 
  SELECT DNI_USUARIO, NOM_USUARIO, APELL_USUARIO, FECHA_NAC, CONTRASEÑA, CORREO, SEXO, ESTADO, COD_ROL FROM datos_usuario WHERE DNI_USUARIO =   _dni ; 
  END
  CALL `spGetUser`(_dni)

  CREATE PROCEDURE `spUpdateUser`(IN `_dni` INT, IN `_nom` VARCHAR(50), IN `_apell` VARCHAR(50), IN `_fecha` DATE, IN `_contra` VARCHAR(50), IN   `_correo` VARCHAR(20), IN `_sexo` VARCHAR(10), IN `_estado` VARCHAR(10), IN `_cod_rol` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
  BEGIN 
  UPDATE datos_usuario SET NOM_USUARIO = _nom, APELL_USUARIO = _apell, FECHA_NAC = _fecha, CONTRASEÑA = _contra, CORREO = _correo, SEXO = _sexo,  ESTADO = _estado, COD_ROL = _cod_rol WHERE DNI_USUARIO = _dni ; 
  END
  CALL `spUpdateUser`(_dni, _nom, _apell, _naci, _contra, _correo, _sexo, _estado, _cod_rol);

  CREATE PROCEDURE `spDeleteUser`(IN `_dni` INT) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
  BEGIN 
  DELETE FROM datos_usuario WHERE DNI_USUARIO = _dni ; 
  END
  CALL `spDeleteUser`(_dni)
-- --------------------------------------------------------

--* Table structure for table `editorial`

  CREATE TABLE `editorial` (
    `COD_EDITORIAL` int(20) NOT NULL,
    `NOM_EDITORIAL` varchar(50) NOT NULL,
    `PAIS` varchar(50) NOT NULL,
    `CIUDAD` varchar(50) NOT NULL,
    `TELEFONO` varchar(35) NOT NULL,
    `DIRECCION` varchar(30) DEFAULT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

              /* Seleccionar todos los datos de la tabla */
  DELIMITER $$
  CREATE PROCEDURE `spGetAllPublishers`()
  BEGIN
    SELECT COD_EDITORIAL, NOM_EDITORIAL, PAIS, CIUDAD, TELEFONO, DIRECCION
    FROM editorial;
  END$$
  DELIMITER ;
  CALL `spGetAllPublishers`()

             /* Realizar la búsqueda por ID */
  DELIMITER $$
  CREATE PROCEDURE `spGetPublisher`(IN _COD_EDITORIAL INT)
  BEGIN
    SELECT COD_EDITORIAL, NOM_EDITORIAL, PAIS, CIUDAD, TELEFONO, DIRECCION
    FROM editorial
    WHERE COD_EDITORIAL = _COD_EDITORIAL ;
  END$$
  DELIMITER ;

  CALL `spGetPublisher`(_COD_EDITORIAL)

              /*  Insertar datos */
  DELIMITER $$
  CREATE PROCEDURE `spAddPublisher`(IN `_NOM_EDITORIAL` VARCHAR(50), IN `_PAIS` VARCHAR(50), IN `_CIUDAD` VARCHAR(50), IN `_TELEFONO` VARCHAR(35),  IN `_DIRECCION` VARCHAR(30))
  BEGIN
    INSERT INTO editorial (NOM_EDITORIAL, PAIS, CIUDAD, TELEFONO, DIRECCION)
    VALUES (_NOM_EDITORIAL, _PAIS, _CIUDAD, _TELEFONO, _DIRECCION);
  END$$
  DELIMITER ;

  CALL `spAddPublisher`(_NOM_EDITORIAL, _PAIS, _CIUDAD, _TELEFONO, _DIRECCION)

              /*  Actualizar datos */
  DELIMITER $$
  CREATE PROCEDURE `spUpdatePublisher`(IN `_COD_EDITORIAL` INT, IN `_NOM_EDITORIAL` VARCHAR(50), IN `_PAIS` VARCHAR(50), IN `_CIUDAD` VARCHAR(50),  IN `_TELEFONO` VARCHAR(35), IN `_DIRECCION` VARCHAR(30))
  BEGIN
    UPDATE
      editorial
    SET
      NOM_EDITORIAL = _NOM_EDITORIAL, PAIS = _PAIS, CIUDAD = _CIUDAD, TELEFONO = _TELEFONO, DIRECCION = _DIRECCION
    WHERE
      COD_EDITORIAL = _COD_EDITORIAL ;
  END$$
  DELIMITER ;

  CALL `spUpdatePublisher`(_COD_EDITORIAL, _NOM_EDITORIAL, _PAIS, _CIUDAD, _TELEFONO, _DIRECCION)

              /*  Eliminar una fila de datos por ID */
  DELIMITER $$
  CREATE PROCEDURE `spDeletePublisher`(IN `_COD_EDITORIAL` INT)
  BEGIN
    DELETE FROM editorial
    WHERE COD_EDITORIAL = _COD_EDITORIAL;
  END$$
  DELIMITER ;

  CALL `spDeletePublisher`(_COD_EDITORIAL)
-- --------------------------------------------------------

--* Pending Table structure for table `enc_prestamo`

  CREATE TABLE `enc_prestamo` (
    `COD_ENC_PRESTAMO` int(20) NOT NULL,
    `FECHA_PRESTAMO` date DEFAULT NULL,
    `CANT_LIBRO` int(20) DEFAULT NULL,
    `DNI_USUARIO` int(20) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

  DELIMITER //
  CREATE PROCEDURE `spGetAllHeaderLoan`() 
  BEGIN
    SELECT COD_ENC_PRESTAMO, FECHA_PRESTAMO, CANT_LIBRO, DNI_USUARIO 
    FROM enc_prestamo;
  END //
  DELIMITER ;
  CALL `spGetAllHeaderLoan`();

 // DELIMITER ;

  DELIMITER //
  CREATE PROCEDURE `spGetHeaderLoan` (IN _COD_ENC_PRESTAMO INT) 
  BEGIN 
    SELECT COD_ENC_PRESTAMO, FECHA_PRESTAMO, CANT_LIBRO, DNI_USUARIO
    FROM enc_prestamo 
    WHERE COD_ENC_PRESTAMO = _COD_ENC_PRESTAMO; 
  END //
  DELIMITER ;
  CALL `spGetHeaderLoan`(_COD_ENC_PRESTAMO)

  DELIMITER //
  CREATE PROCEDURE `spAddHeaderLoan`(IN _FECHA_PRESTAMO DATE, IN _CANT_LIBRO INT, IN _DNI_USUARIO INT)
   BEGIN
      INSERT INTO enc_prestamo (FECHA_PRESTAMO, CANT_LIBRO, DNI_USUARIO) 
      VALUES (_FECHA_PRESTAMO, _CANT_LIBRO, _DNI_USUARIO);
   END //
  DELIMITER ;
  CALL `spAddHeaderLoan`(_FECHA_PRESTAMO, _CANT_LIBRO, _DNI_USUARIO);

//DELIMITER ;

  DELIMITER //
  CREATE PROCEDURE `spUpdateHeaderLoan`(IN COD_ENC_PRESTAMO INT, IN _FECHA_PRESTAMO DATE, IN _CANT_LIBRO INT, IN _DNI_USUARIO INT) 
  BEGIN 
    UPDATE enc_prestamo 
    SET FECHA_PRESTAMO = _FECHA_PRESTAMO, CANT_LIBRO = _CANT_LIBRO, DNI_USUARIO = _DNI_USUARIO 
    WHERE COD_ENC_PRESTAMO =  _COD_ENC_PRESTAMO; 
  END //
  DELIMITER ;
  CALL `spUpdateHeaderLoan`(_COD_ENC_PRESTAMO, _FECHA_PRESTAMO, _CANT_LIBRO, _DNI_USUARIO);

   DELIMITER //
  CREATE PROCEDURE `spDeleteHeaderLoan`(IN _COD_ENC_PRESTAMO INT) 
  BEGIN 
      DELETE FROM enc_prestamo
      WHERE COD_ENC_PRESTAMO = _COD_ENC_PRESTAMO; 
  END //
  DELIMITER ;
  CALL `spDeleteHeaderLoan`(_COD_ENC_PRESTAMO)


-- --------------------------------------------------------

--* Table structure for table `genero`

  CREATE TABLE `genero` (
    `COD_GENERO` int(20) NOT NULL,
    `NOMBRE` varchar(50) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;


            /* All Dates for table //GetAllGenres */
  DELIMITER //
  CREATE PROCEDURE `spGetAllGenre`()
  BEGIN
    SELECT COD_GENERO,
           NOMBRE
    FROM genero;
  END //
  DELIMITER ;
  CALL `spGetAllGenre`();

            /* Buscar por ID: */
  DELIMITER //
  CREATE PROCEDURE `spGetGenre`(IN _COD_GENERO int(20))
  BEGIN
    SELECT COD_GENERO, NOMBRE
    FROM genero
    WHERE COD_GENERO = _COD_GENERO;
  END //

  CALL `spGetGenre`(_COD_GENERO);
  DELIMITER ;

            /* Insertar datos: */
  DELIMITER //
  CREATE PROCEDURE `spAddGenre`(IN _NOMBRE varchar(50))
  BEGIN
    INSERT INTO genero (NOMBRE)
    VALUES (_NOMBRE);
  END //
  DELIMITER ;
  CALL  `spAddGenre`(_NOMBRE);

            /* Actualizar datos: */
  DELIMITER //
  CREATE PROCEDURE `spUpdateGenre`(IN _COD_GENERO int(20), IN _NOMBRE varchar(50))
  BEGIN
    UPDATE genero
    SET NOMBRE = _NOMBRE
    WHERE COD_GENERO = _COD_GENERO;
  END //
  DELIMITER ;
  CALL  `spUpdateGenre`(_COD_GENERO, _NOMBRE);

            /* Eliminar una fila de datos por ID: */
  DELIMITER //
  CREATE PROCEDURE `spDeleteGenre`(IN _COD_GENERO int(20))
  BEGIN
    DELETE FROM genero
    WHERE COD_GENERO = _COD_GENERO;
  END //

  DELIMITER ;
  CALL  `spDeleteGenre`(_COD_GENERO);



-- --------------------------------------------------------

--* Table structure for table `infoautor`

  CREATE TABLE `infoautor` (
    `COD_AUTOR` int(20) NOT NULL,
    `NOM_AUTOR` varchar(40) NOT NULL,
    `FECHA_NACIMIENTO` date NOT NULL,
    `LUGAR_NACIMIENTO` varchar(50) NOT NULL,
    `FECHA_MUERTE` date DEFAULT NULL,
    `OCUPACIONES` varchar(40) NOT NULL,
    `MOVIMIENTO_LITERARIO` varchar(50) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
  

  DELIMITER //
  CREATE PROCEDURE  `spGetAllAuthors`()
   BEGIN
  SELECT COD_AUTOR, NOM_AUTOR, FECHA_NACIMIENTO, LUGAR_NACIMIENTO, FECHA_MUERTE, OCUPACIONES, MOVIMIENTO_LITERARIO FROM infoautor; 
  END
   // DELIMITER ;
  CALL `spGetAllAuthors`();

  DELIMITER //
  CREATE PROCEDURE `spGetAuthor`(IN _COD_AUTOR INT) 
  BEGIN 
    SELECT COD_AUTOR, NOM_AUTOR, FECHA_NACIMIENTO, LUGAR_NACIMIENTO, FECHA_MUERTE, OCUPACIONES, MOVIMIENTO_LITERARIO FROM infoautor 
    WHERE COD_AUTOR   = _COD_AUTOR; 
  END 
  // DELIMITER ;
  CALL `spGetAuthor`(_COD_AUTOR)

  DELIMITER //
  CREATE PROCEDURE spAddAuthor(IN _NOM_AUTOR VARCHAR(40), IN _FECHA_NACIMIENTO DATE, IN _LUGAR_NACIMIENTO VARCHAR(50), IN _FECHA_MUERTE DATE, IN _OCUPACIONES VARCHAR(40), IN _MOVIMIENTO_LITERARIO VARCHAR(50))
  BEGIN
      INSERT INTO `infoautor` (
          `NOM_AUTOR`,
          `FECHA_NACIMIENTO`,
          `LUGAR_NACIMIENTO`,
          `FECHA_MUERTE`,
          `OCUPACIONES`,
          `MOVIMIENTO_LITERARIO`
      ) VALUES (_NOM_AUTOR, _FECHA_NACIMIENTO, _LUGAR_NACIMIENTO, _FECHA_MUERTE, _OCUPACIONES, _MOVIMIENTO_LITERARIO
      );
  END 
  // DELIMITER ;

  CALL spAddAuthor(_NOM_AUTOR, _FECHA_NACIMIENTO, _LUGAR_NACIMIENTO, _FECHA_MUERTE, _OCUPACIONES, _MOVIMIENTO_LITERARIO);

  DELIMITER  //
  CREATE PROCEDURE `spUpdateAuthor`(IN `_COD_AUTOR` INT, IN `_NOM_AUTOR` VARCHAR(40), IN `_FECHA_NACIMIENTO` DATE, IN `_LUGAR_NACIMIENTO` VARCHAR(50), IN `_FECHA_MUERTE` DATE, IN `_OCUPACIONES` VARCHAR(40), IN `_MOVIMIENTO_LITERARIO` VARCHAR(50))
  BEGIN
    UPDATE infoautor 
    SET NOM_AUTOR = _NOM_AUTOR, FECHA_NACIMIENTO = _FECHA_NACIMIENTO, LUGAR_NACIMIENTO = _LUGAR_NACIMIENTO, FECHA_MUERTE = _FECHA_MUERTE, OCUPACIONES = _OCUPACIONES,   MOVIMIENTO_LITERARIO = _MOVIMIENTO_LITERARIO 
    WHERE COD_AUTOR = _COD_AUTOR;
  END 
  // DELIMITER ;
  CALL `spUpdateAuthor`(_COD_AUTOR, _NOM_AUTOR, _FECHA_NACIMIENTO, _LUGAR_NACIMIENTO, _FECHA_MUERTE, _OCUPACIONES, _MOVIMIENTO_LITERARIO);

  DELIMITER //
  CREATE PROCEDURE `spDeleteAuthor`(IN _COD_AUTOR INT) 
  BEGIN 
    DELETE FROM infoautor 
    WHERE COD_AUTOR = _COD_AUTOR;
  END 
  // DELIMITER ;
  CALL `spDeleteAuthor`()

-- --------------------------------------------------------

--* Table structure for table `multa`

  CREATE TABLE `multa` (
    `COD_MULTA` int(4) NOT NULL,
    `FECHA_INICIO` date DEFAULT NULL,
    `FECHA_FIN` date DEFAULT NULL,
    `VALOR` int(5) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

  DELIMITER $$
  CREATE PROCEDURE `spGetPenaltys`()
  BEGIN
  SELECT COD_MULTA, FECHA_INICIO, FECHA_FIN, VALOR FROM multa;
  END$$
  DELIMITER ;
  CALL `spGetPenaltys`()

  DELIMITER $$
  CREATE PROCEDURE `spGetPenalty`(IN `_COD_MULTA` INT)
  BEGIN
  SELECT COD_MULTA, FECHA_INICIO, FECHA_FIN, VALOR
  FROM multa
  WHERE COD_MULTA = _COD_MULTA;
  END$$
  DELIMITER ;
  CALL `spGetPenalty`(_COD_MULTA)

  DELIMITER $$
  CREATE PROCEDURE `spAddPenalty`(IN `_FECHA_INICIO` DATE, IN `_FECHA_FIN` DATE, IN `_VALOR` INT)
  BEGIN
  INSERT INTO multa(FECHA_INICIO,FECHA_FIN,VALOR)
  VALUES(_FECHA_INICIO,_FECHA_FIN,_VALOR);
  END$$
  DELIMITER ;
  CALL `spAddPenalty`(_FECHA_INICIO, _FECHA_FIN, _VALOR)

  DELIMITER $$
  CREATE PROCEDURE `spUpdatePenalty`(IN _COD_MULTA INT, IN _FECHA_INICIO DATE, IN _FECHA_FIN DATE, IN _VALOR INT)
  BEGIN
  UPDATE multa
  SET FECHA_INICIO = _FECHA_INICIO, FECHA_FIN = _FECHA_FIN, VALOR = _VALOR
  WHERE COD_MULTA = _COD_MULTA;
  END$$
  DELIMITER ;
  CALL `spUpdatePenalty`(_COD_MULTA,_FECHA_INICIO,_FECHA_FIN,_VALOR )

  DELIMITER $$
  CREATE PROCEDURE `spDeletePenalty`(IN _COD_MULTA INT)
  BEGIN
  DELETE FROM multa WHERE COD_MULTA = _COD_MULTA;
  END$$
  DELIMITER ;
  CALL `spDeletePenalty`(_COD_MULTA)
-- --------------------------------------------------------

--* Table structure for table `rol`

  CREATE TABLE `rol` (
    `cod_rol` int(4) NOT NULL,
    `rol` varchar(50) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
  
  DELIMITER $$
  CREATE PROCEDURE `spGetAllRoles`()
  BEGIN
  SELECT cod_rol, rol FROM rol;
  END$$
  DELIMITER ;
  CALL spGetRoles()
  
  DELIMITER $$
  CREATE PROCEDURE `spGetRole`(IN _cod_rol INT)
  BEGIN
  SELECT cod_rol, rol FROM rol WHERE cod_rol = _cod_rol;
  END$$
  DELIMITER ;
  CALL `spGetRole`(_cod_rol)
  
  DELIMITER $$
  CREATE PROCEDURE `spAddRole`(IN `_rol` VARCHAR(50))
  BEGIN
  INSERT INTO rol (rol) VALUES (_rol);
  END$$
  DELIMITER ;
  CALL spAddRole(_rol)
  
  DELIMITER $$
  CREATE PROCEDURE `spUpdateRole`(IN _cod_rol INT, IN _rol VARCHAR(50))
  BEGIN
  UPDATE rol SET rol = _rol WHERE cod_rol = _cod_rol;
  END$$
  DELIMITER ;
  CALL `spUpdateRole`(_cod_rol, _rol)
  
  
  CALL `spDeleteRole`(_cod_rol)
  
  
-- --------------------------------------------------------

--* Table structure for table `det_prestamo`

  CREATE TABLE `det_prestamo` (
    `COD_DETALLE` int(20) NOT NULL,
    `DESCRIPCION` text NOT NULL,
    `COD_LIBRO` int(20) NOT NULL,
    `COD_ENC_PRESTAMO` int(20) NOT NULL,
    `COD_MULTA` int(4) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELIMITER //

CREATE PROCEDURE `spGetAllDetailLoans`()
BEGIN
    SELECT COD_DETALLE, DESCRIPCION, COD_LIBRO, COD_ENC_PRESTAMO, COD_MULTA
    FROM det_prestamo;
END //

DELIMITER ;
CALL `spGetspGetAllDetailLoans`()

DELIMITER //

CREATE PROCEDURE `spGetDetailLoan`(IN _COD_DETALLE INT)
BEGIN
    SELECT COD_DETALLE, DESCRIPCION, COD_LIBRO, COD_ENC_PRESTAMO, COD_MULTA
    FROM det_prestamo
    WHERE COD_DETALLE = _COD_DETALLE;
END //

DELIMITER ;
CALL `spGetDetailLoan`(_COD_DETALLE)

DELIMITER //

CREATE PROCEDURE `spAddDetailLoan`(IN _DESCRIPCION TEXT, IN _COD_LIBRO INT, IN _COD_ENC_PRESTAMO INT, IN _COD_MULTA INT)
BEGIN
    INSERT INTO det_prestamo (DESCRIPCION, COD_LIBRO, COD_ENC_PRESTAMO, COD_MULTA)
    VALUES (_DESCRIPCION, _COD_LIBRO, _COD_ENC_PRESTAMO, _COD_MULTA);
END //

DELIMITER ;
CALL `spAddDetailLoan`(_DESCRIPCION, _COD_LIBRO, _COD_ENC_PRESTAMO, _COD_MULTA)

DELIMITER //

CREATE PROCEDURE `spUpdateDetailLoan`(IN _COD_DETALLE INT, IN _DESCRIPCION TEXT, IN _COD_LIBRO INT, IN _COD_ENC_PRESTAMO INT, IN _COD_MULTA INT)
BEGIN
    UPDATE det_prestamo
    SET DESCRIPCION = _DESCRIPCION, COD_LIBRO = _COD_LIBRO, COD_ENC_PRESTAMO = _COD_ENC_PRESTAMO, COD_MULTA = _COD_MULTA
    WHERE COD_DETALLE = _COD_DETALLE;
END //
DELIMITER ;
CALL `spUpdateDetailLoan`(_COD_DETALLE, _DESCRIPCION, _COD_LIBRO, _COD_ENC_PRESTAMO, _COD_MULTA)

DELIMITER //

CREATE PROCEDURE `spDeleteDetailLoan`(IN _COD_DETALLE INT)
BEGIN
    DELETE FROM det_prestamo
    WHERE COD_DETALLE = _COD_DETALLE;
END //
DELIMITER ;
CALL `spDeleteDetailLoan`(_COD_DETALLE)


-- --------------------------------------------------------

--
--* Table structure for table `editorial_libros`

  CREATE TABLE `editorial_libros` (
    `COD_EDITORIAL_LIBROS` int(20) NOT NULL,
    `COD_LIBRO` int(20) NOT NULL,
    `COD_EDITORIAL` int(20) NOT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELIMITER //
CREATE PROCEDURE `spGetAllPublishings`()
BEGIN
  SELECT 
    COD_EDITORIAL_LIBROS,
    COD_LIBRO,
    COD_EDITORIAL
  FROM editorial_libros;
END //
DELIMITER ;
CALL `spGetAllPublishings`()

DELIMITER //
CREATE PROCEDURE `spGetPublishing`(IN _COD_EDITORIAL_LIBROS INT)
BEGIN
  SELECT 
    COD_EDITORIAL_LIBROS,
    COD_LIBRO,
    COD_EDITORIAL
  FROM editorial_libros
  WHERE COD_EDITORIAL_LIBROS = _COD_EDITORIAL_LIBROS;
END //
DELIMITER ;
CALL `spGetPublishing`(_COD_EDITORIAL_LIBROS)

DELIMITER //
CREATE PROCEDURE `spAddPublishing`(IN _COD_LIBRO INT, IN _COD_EDITORIAL INT)
BEGIN
  INSERT INTO editorial_libros (COD_LIBRO, COD_EDITORIAL)
  VALUES (_COD_LIBRO, _COD_EDITORIAL);
END //
DELIMITER ;
CALL `spAddPublishing`(_COD_LIBRO, _COD_EDITORIAL);

DELIMITER //
CREATE PROCEDURE `spUpdatePublishing`(IN _COD_EDITORIAL_LIBROS INT,IN _COD_LIBRO INT, IN _COD_EDITORIAL INT)
BEGIN
  UPDATE editorial_libros
  SET 
    COD_LIBRO = _COD_LIBRO,
    COD_EDITORIAL = _COD_EDITORIAL
  WHERE COD_EDITORIAL_LIBROS = _COD_EDITORIAL_LIBROS;
END //
DELIMITER ;
CALL `spUpdatePublishing`(_COD_EDITORIAL_LIBROS, _COD_LIBRO, _COD_EDITORIAL)

DELIMITER //
CREATE PROCEDURE `spDeletePublishing`(IN _COD_EDITORIAL_LIBROS INT)
BEGIN
  DELETE FROM editorial_libros
  WHERE COD_EDITORIAL_LIBROS = _COD_EDITORIAL_LIBROS ;
END //
DELIMITER ;
CALL `spDeletePublishing`(_COD_EDITORIAL_LIBROS);
-- --------------------------------------------------------

--
--* Table structure for table `libro`

  CREATE TABLE `libro` (
    `COD_LIBRO` int(20) NOT NULL,
    `SIPNOPSIS` text NOT NULL,
    `TITULO`    text NOT NULL,
    `FECHA_PUBLICACION` date NOT NULL,
    `NUM_SERIE` int(20) NOT NULL,
    `COD_GENERO` int(20) NOT NULL,
    `COD_AUTOR` int(20) NOT NULL
    `IMAGEN` mediumblob DEFAULT NULL
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELIMITER //

CREATE PROCEDURE `spGetAllBooks`()
BEGIN
    SELECT COD_LIBRO, SIPNOPSIS, TITULO, FECHA_PUBLICACION, NUM_SERIE, COD_GENERO, COD_AUTOR
    FROM libro;
END //
DELIMITER ;
CALL `spGetAllBooks`()

DELIMITER //

CREATE PROCEDURE `spGetBook`(IN _COD_LIBRO INT)
BEGIN
    SELECT COD_LIBRO,
          SIPNOPSIS,
          TITULO,
          FECHA_PUBLICACION,
          NUM_SERIE,
          COD_GENERO,
          COD_AUTOR
    FROM libro
    WHERE COD_LIBRO = _COD_LIBRO;
END //
DELIMITER ;
CALL `spGetBook`(_COD_LIBRO)

DELIMITER //

CREATE PROCEDURE `spAddBook`(IN `_SIPNOPSIS` TEXT, IN `_TITULO` TEXT, IN `_FECHA_PUBLICACION` DATE, IN `_NUM_SERIE` INT, IN `_COD_GENERO` INT, IN `_COD_AUTOR` INT) 
 BEGIN
  INSERT 
  INTO libro (SIPNOPSIS, TITULO, FECHA_PUBLICACION, NUM_SERIE, COD_GENERO, COD_AUTOR) VALUES (_SIPNOPSIS, _TITULO, _FECHA_PUBLICACION, _NUM_SERIE, _COD_GENERO, _COD_AUTOR); 
  END //
DELIMITER ;
CALL `spAddBook`(_SIPNOPSIS, _TITULO, _FECHA_PUBLICACION, _NUM_SERIE, _COD_GENERO, _COD_AUTOR)

DELIMITER //

CREATE PROCEDURE `spUpdateBook`(IN _COD_LIBRO INT, IN _SIPNOPSIS TEXT, IN _TITULO TEXT, IN _FECHA_PUBLICACION DATE, IN _NUM_SERIE INT, IN _COD_GENERO INT, IN _COD_AUTOR INT)
BEGIN
    UPDATE libro
    SET SIPNOPSIS= _SIPNOPSIS,
      TITULO = _TITULO,
      FECHA_PUBLICACION = _FECHA_PUBLICACION,
      NUM_SERIE = _NUM_SERIE,
      COD_GENERO = _COD_GENERO,
      COD_AUTOR = _COD_AUTOR
    WHERE COD_LIBRO = _COD_LIBRO;
END //
DELIMITER ;
CALL `spUpdateBook`(_COD_LIBRO, _SIPNOPSIS, _TITULO, _FECHA_PUBLICACION, _NUM_SERIE, _COD_GENERO, _COD_AUTOR);

DELIMITER //

CREATE PROCEDURE `spDeleteBook`(IN _COD_LIBRO INT)
BEGIN
    DELETE FROM libro
    WHERE COD_LIBRO = _COD_LIBRO;
END //
DELIMITER ;
CALL `spDeleteBook`(_COD_LIBRO)